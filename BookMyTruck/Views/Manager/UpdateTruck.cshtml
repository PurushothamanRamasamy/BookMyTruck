@model BookMyTruck.Truck

@{
    ViewBag.Title = "UpdateTruck";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
}

<h2 class="text-center text-danger font-weight-bold" style="margin-bottom:20px">Update Truck</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

            
<div class="card" style="        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19) !important;
        padding-top: 60px;
        padding-bottom: 60px
">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.TruckNumber, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TruckNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TruckNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-2"></div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.DriverName, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DriverName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.TruckType, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.TruckType, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.TruckType, new SelectList(ViewBag.ddlTruckType, "Value", "Text"), htmlAttributes: new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.TruckType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-2"></div>
        </div>
        <div class="row">
            <div class="col-2"></div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.DriverLicenceNumber, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DriverLicenceNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DriverLicenceNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.MaxCapacity, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaxCapacity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaxCapacity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-2"></div>
        </div>
        <div class="row">
            <div class="col-2"></div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.PickCity, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PickCity, new { htmlAttributes = new { @class = "form-control", @id = "txtPickUp" } })
                        @Html.ValidationMessageFor(model => model.PickCity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.DropCity, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DropCity, new { htmlAttributes = new { @class = "form-control", @id = "txtDrop" } })
                        @Html.ValidationMessageFor(model => model.DropCity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="col-2"></div>
        </div>
        <div class="row">
            <div class="col-2"></div>
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.CostPerKM, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CostPerKM, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CostPerKM, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-6">

            </div>

        </div>
        <center>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-danger" />
                </div>
            </div>
        </center>


        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.ManagerId, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerId, "", new { @class = "text-danger" })
            </div>
        </div>










        <div class="row">
            <div class="col-2"></div>
            <div class="col-4">
                <div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.TruckStatus, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.TruckStatus)
                            @Html.ValidationMessageFor(model => model.TruckStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.BookedStatus, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.BookedStatus)
                            @Html.ValidationMessageFor(model => model.BookedStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-2"></div>
        </div>





    </div>

</div>
}

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCtICKUA_3IawnHVSpHhlZby-CiTZw2kKo&libraries=places">
</script>
<script>
    var input = document.getElementById('txtPickUp');
    var txtSource = new google.maps.places.Autocomplete(input);
    var input = document.getElementById('txtDrop');
    var txtDestination = new google.maps.places.Autocomplete(input);
</script>

