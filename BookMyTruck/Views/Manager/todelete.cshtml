@model BookMyTruck.Truck

@{
    ViewBag.Title = "AddTruck";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
}

<h2>AddTruck</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.TruckNumber, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TruckNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TruckNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TruckType, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.TruckType, new { htmlAttributes = new { @class = "form-control" } })*@

            @Html.DropDownListFor(model => model.TruckType, new SelectList(ViewBag.ddlTruckType, "Value", "Text"), "---Select Truck---", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TruckType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ManagerId, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ManagerId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ManagerId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DriverName, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DriverName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DriverName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DriverLicenceNumber, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DriverLicenceNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DriverLicenceNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PickCity, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PickCity, new { htmlAttributes = new { @class = "form-control", @id = "txtPickUp" } })
            @Html.ValidationMessageFor(model => model.PickCity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DropCity, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DropCity, new { htmlAttributes = new { @class = "form-control", @id = "txtDrop" } })
            @Html.ValidationMessageFor(model => model.DropCity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaxCapacity, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaxCapacity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaxCapacity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CostPerKM, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CostPerKM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CostPerKM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add" class="btn btn-outline-success" />
        </div>
    </div>
</div>
}

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCtICKUA_3IawnHVSpHhlZby-CiTZw2kKo&libraries=places">
</script>
<script>
    var input = document.getElementById('txtPickUp');
    var txtSource = new google.maps.places.Autocomplete(input);
    var input = document.getElementById('txtDrop');
    var txtDestination = new google.maps.places.Autocomplete(input);
</script>
